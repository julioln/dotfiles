[build]
instructions = '''
FROM docker.io/archlinux

# Base setup

RUN pacman -Syu wget base-devel git --asdeps --noconfirm
RUN useradd -m --uid 1000 user
RUN mkdir -p /run/user/1000/pulse
RUN chown -R user:user /run/user/1000

# ethminer

WORKDIR /home/user
RUN git clone https://aur.archlinux.org/ethminer.git 
WORKDIR ethminer

RUN pacman -S $(/bin/sh -c 'source /home/user/ethminer/PKGBUILD ; echo ${depends[@]}') --noconfirm
RUN pacman -S $(/bin/sh -c 'source /home/user/ethminer/PKGBUILD ; echo ${makedepends[@]}') --asdeps --noconfirm

# https://aur.archlinux.org/packages/ethminer#comment-808393
ADD https://boostorg.jfrog.io/artifactory/main/release/1.66.0/source/boost_1_66_0.7z /home/user/.hunter/_Base/Download/Boost/1.66.0/075d0b4/

RUN chown -R user:user /home/user
RUN sudo -u user makepkg 
RUN pacman -U $(/bin/sh -c 'source /home/user/ethminer/PKGBUILD ; echo ${pkgname}-${pkgver}-${pkgrel}-${arch}.pkg.tar.zst') --noconfirm

# opencl-amd

WORKDIR /home/user
RUN git clone https://aur.archlinux.org/opencl-amd.git 
WORKDIR opencl-amd

RUN pacman -S $(/bin/sh -c 'source /home/user/opencl-amd/PKGBUILD ; echo ${depends[@]}') --noconfirm

RUN chown -R user:user /home/user
RUN sudo -u user makepkg 
RUN pacman -U $(/bin/sh -c 'source /home/user/opencl-amd/PKGBUILD ; echo ${pkgname}-${pkgver}-${pkgrel}-${arch}.pkg.tar.zst') --noconfirm

# Cleanup

RUN pacman -Rns $(/bin/sh -c 'source /home/user/ethminer/PKGBUILD ; echo ${makedepends[@]}') --noconfirm
RUN pacman -Rns $(pacman -Qtdq) --noconfirm
RUN rm -rf /var/cache/pacman/pkg
RUN rm -rf /home/user/ethminer
RUN rm -rf /home/user/opencl-amd
CMD ["/usr/bin/bash"]
'''

[run]
x11 = false
wayland = false
dri = true
ipc = false
pulseaudio = false
dbus = false
net = true
uidmap = false
volumes = []
#devices = ["/dev/nvidia0", "/dev/nvidia-caps", "/dev/nvidiactl"]
devices = []
env = []

ports = []
