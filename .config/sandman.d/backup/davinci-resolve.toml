[build]
instructions = '''
FROM localhost/sandman/base/opencl-amd

# Base setup
ENV APPIMAGE_EXTRACT_AND_RUN=1
RUN echo -e '[multilib]\n\
Include = /etc/pacman.d/mirrorlist' >> /etc/pacman.conf
RUN pacman -Syu --noconfirm

# Dependencies
RUN pacman -S base-devel git distcc --asdeps --noconfirm
RUN pacman -S clinfo ffmpeg ocl-icd alsa-lib alsa-utils pulseaudio pulseaudio-alsa libva-mesa-driver mesa-vdpau --noconfirm

# Wire ALSA to pulse
#RUN echo -e 'pcm.!default pulse\n\
#ctl.!default pulse' > /etc/asound.conf

# qt5-webkit
#WORKDIR /tmp/build
#RUN git clone https://aur.archlinux.org/qt5-webkit.git 
#WORKDIR qt5-webkit
#RUN yes | low-prio makepkg -si --noconfirm
RUN pacman -U https://archive.archlinux.org/packages/q/qt5-webkit/qt5-webkit-5.212.0alpha4-18-x86_64.pkg.tar.zst --noconfirm

# amdgpu-pro
WORKDIR /tmp/build
RUN git clone https://aur.archlinux.org/amdgpu-pro-installer.git 
WORKDIR amdgpu-pro-installer
RUN yes | low-prio makepkg -si --noconfirm

# python-pylspcli
WORKDIR /tmp/build
RUN git clone https://aur.archlinux.org/python-pylspci.git 
WORKDIR python-pylspci
RUN yes | low-prio makepkg -si --noconfirm

# Davinci checker
WORKDIR /opt
RUN git clone https://github.com/Ashark/davinci-resolve-checker
RUN pacman -S expac mesa-demos mesa-utils python-distro --noconfirm

# Davinci
WORKDIR /tmp/build
RUN git clone https://aur.archlinux.org/davinci-resolve.git 
WORKDIR davinci-resolve
RUN mkdir -p '/var/BlackmagicDesign/DaVinci Resolve'
RUN yes | low-prio makepkg -si --noconfirm

# Cleanup
WORKDIR /home/user
RUN pacman -Rns $(pacman -Qtdq) --noconfirm
RUN rm -rf /tmp/*
RUN rm -rf /var/cache/*

CMD ["/usr/bin/progl", "/opt/resolve/bin/resolve"]
'''

[run]
x11 = true
wayland = false
dri = true
ipc = true
pulseaudio = true
dbus = true
network = "slirp4netns"
uidmap = true
home = true
fonts = true
volumes = [
	'/home/julio/Videos:/home/user/Videos',
	'/home/julio/Downloads:/home/user/Downloads',
	'/home/julio/Music:/home/user/Music',
	'/home/julio/Pictures:/home/user/Pictures',
]
devices = [
	'/dev/kfd',
	'/dev/snd',
]
args = ['--group-add', 'video']
env = [
#	'CLOVER_PLATFORM_VERSION_OVERRIDE=1.2',
#	'CLOVER_DEVICE_VERSION_OVERRIDE=1.2',
#	'CLOVER_DEVICE_CLC_VERSION_OVERRIDE=1.2',
]
ports = []

