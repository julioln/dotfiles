[build]
instructions = '''
FROM docker.io/archlinux
ADD arch_mirrorlist /etc/pacman.d/mirrorlist

# Base setup
ENV APPIMAGE_EXTRACT_AND_RUN=1
RUN echo -e '[multilib]\n\
Include = /etc/pacman.d/mirrorlist' >> /etc/pacman.conf
RUN pacman -Syu base-devel git --asdeps --noconfirm
RUN useradd -m --uid 1000 user
RUN mkdir -p /run/user/1000/pulse
RUN chown -R user:user /run/user/1000

# Extras
RUN pacman -S alsa-lib pulseaudio --noconfirm

# Davinci
WORKDIR /home/user
RUN git clone https://aur.archlinux.org/davinci-resolve.git 
WORKDIR davinci-resolve

# Install dependencies
RUN pacman -S $(/bin/sh -c 'source /home/user/davinci-resolve/PKGBUILD ; echo ${depends[@]}') --noconfirm
RUN pacman -S $(/bin/sh -c 'source /home/user/davinci-resolve/PKGBUILD ; echo ${makedepends[@]}') --asdeps --noconfirm

# Patch appimage otherwise it will fail with FUSE mount error
RUN echo -e '131c131\n\
< 	./${_installer_binary} -i -y -n -a -C "${pkgdir}/opt/${_pkgname}"\n\
---\n\
> 	./${_installer_binary} --appimage-extract-and-run -i -y -n -a -C "${pkgdir}/opt/${_pkgname}"' | patch PKGBUILD

# These dirs will fail to be created during makepkg
RUN mkdir -p '/var/BlackmagicDesign/DaVinci Resolve'

# Make the package and install it
RUN chown -R user:user /home/user
RUN sudo -u user makepkg 
RUN pacman -U $(/bin/sh -c 'source /home/user/davinci-resolve/PKGBUILD ; echo ${pkgname}-${pkgver}-${pkgrel}-${arch}.pkg.tar.zst') --noconfirm

# Cleanup
RUN pacman -Rns $(pacman -Qtdq) --noconfirm
RUN rm -rf /tmp/*
RUN rm -rf /var/cache/*
RUN rm -rf /home/user/davinci-resolve

CMD ["/opt/resolve/bin/resolve"]
'''

[run]
x11 = true
wayland = false
dri = true
ipc = true
pulseaudio = true
dbus = true
network = "slirp4netns"
uidmap = true
home = true
volumes = []
devices = []
env = []
ports = []

